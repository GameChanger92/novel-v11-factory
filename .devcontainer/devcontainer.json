// .devcontainer/devcontainer.json (기존 설정 + Docker 자동 실행 통합 버전)
{
  "name": "Novel V11 Factory",
  "image": "mcr.microsoft.com/devcontainers/python:1-3.12-bullseye",

  // Features to add to the dev container.
  "features": {
    // ★★★ 1. "Docker를 설치해줘!" 라는 핵심 기능 추가 ★★★
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {},

    // --- 기존의 유용한 기능들은 그대로 유지 ---
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installBuildTools": "true"
    }
  },

  // ★★★ 2. docker-compose.yml 파일과 연결 ★★★
  "dockerComposeFile": [
    "../docker-compose.yml"
  ],

  // ★★★ 3. neo4j 서비스를 자동으로 실행 ★★★
  "runServices": [
    "neo4j"
  ],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // Neo4j에 필요한 포트만 남기고 정리했습니다.
  "forwardPorts": [7474, 7687],

  // Use 'postCreateCommand' to run commands after the container is created.
  // 파이썬 라이브러리 자동 설치 (기존 기능 유지)
  "postCreateCommand": "pip install -r requirements.txt --prefer-binary --no-cache-dir && pip install -e .",

  // ★★★ 4. Codespace에 접속할 때마다 Neo4j가 켜졌는지 확인하는 명령어 자동 실행 ★★★
  "postAttachCommand": {
    "server": "docker ps --format '{{.Names}}: {{.Status}}' && echo 'Neo4j auto-start check complete!'"
  },

  // Environment variables for the container
  "containerEnv": {
    "PYTHONPATH": "/workspaces/novel-v11-factory"
  },

  // Configure tool-specific properties. (기존 설정 모두 유지)
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.pylint",
        "ms-python.black-formatter",
        "ms-toolsai.jupyter",
        "ms-python.isort",
        "charliermarsh.ruff",
        "ms-vscode.test-adapter-converter",
        "hbenl.vscode-test-explorer"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.testing.cwd": "${workspaceFolder}",
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.pytestArgs": [
          "tests"
        ],
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.formatting.provider": "black"
      }
    }
  },

  // Uncomment to connect as root instead.
  "remoteUser": "vscode"
}